// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dbs2webapp.Models;

#nullable disable

namespace dbs2webapp.Migrations
{
    [DbContext(typeof(Dbs2databaseContext))]
    [Migration("20250326110529_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dbs2webapp.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Assignme__3214EC072522C8E5");

                    b.HasIndex("ChapterId");

                    b.HasIndex("UserId");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.AssignmentSubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Assignme__3214EC079993DCD9");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Assignment_submission", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Chapter__3214EC0715667D5C");

                    b.HasIndex("CourseId");

                    b.ToTable("Chapter", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.ChapterContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("TextFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Chapter___3214EC07967DB6BE");

                    b.HasIndex("ChapterId");

                    b.ToTable("Chapter_content", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Course_categoryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Course__3214EC07ADE10529");

                    b.HasIndex("CourseCategoryId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.CourseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Course_c__3214EC0711D06CA9");

                    b.ToTable("Course_category", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Option__3214EC0720FD934B");

                    b.HasIndex("QuestionId");

                    b.ToTable("Option", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC07BE6F4E22");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC0757F8FBB8");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Test__3214EC077FA06AA2");

                    b.HasIndex("ChapterId");

                    b.ToTable("Test", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.TestInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attempt")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Test_ins__3214EC07C1C5D6D4");

                    b.HasIndex("TestId");

                    b.HasIndex("UserId");

                    b.ToTable("Test_instance", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.TestQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Test_Que__3214EC076A260717");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TestId");

                    b.ToTable("Test_Question", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength();

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07C0C0ECF6");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534C2FFE62C")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.UserCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__User_Cou__3214EC07D1836DD5");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Course", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.VwAssignmentSubmission", b =>
                {
                    b.Property<string>("AssignmentTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SubmissionFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.Property<string>("SubmissionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_AssignmentSubmissions", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.VwCourseDetail", b =>
                {
                    b.Property<int?>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("ChapterName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("MaxAttempts")
                        .HasColumnType("int");

                    b.Property<int?>("TestId")
                        .HasColumnType("int");

                    b.Property<string>("TestTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable((string)null);

                    b.ToView("vw_CourseDetails", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.VwUsersWithRole", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_UsersWithRoles", (string)null);
                });

            modelBuilder.Entity("dbs2webapp.Models.Assignment", b =>
                {
                    b.HasOne("dbs2webapp.Models.Chapter", "Chapter")
                        .WithMany("Assignments")
                        .HasForeignKey("ChapterId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__Chapt__5BE2A6F2");

                    b.HasOne("dbs2webapp.Models.User", "User")
                        .WithMany("Assignments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__UserI__5AEE82B9");

                    b.Navigation("Chapter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dbs2webapp.Models.AssignmentSubmission", b =>
                {
                    b.HasOne("dbs2webapp.Models.Assignment", "Assignment")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("AssignmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__Assig__5EBF139D");

                    b.HasOne("dbs2webapp.Models.User", "User")
                        .WithMany("AssignmentSubmissions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Assignmen__UserI__5FB337D6");

                    b.Navigation("Assignment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dbs2webapp.Models.Chapter", b =>
                {
                    b.HasOne("dbs2webapp.Models.Course", "Course")
                        .WithMany("Chapters")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Chapter__CourseI__45F365D3");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("dbs2webapp.Models.ChapterContent", b =>
                {
                    b.HasOne("dbs2webapp.Models.Chapter", "Chapter")
                        .WithMany("ChapterContents")
                        .HasForeignKey("ChapterId")
                        .IsRequired()
                        .HasConstraintName("FK__Chapter_c__Chapt__48CFD27E");

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("dbs2webapp.Models.Course", b =>
                {
                    b.HasOne("dbs2webapp.Models.CourseCategory", "CourseCategory")
                        .WithMany("Courses")
                        .HasForeignKey("CourseCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Course__Course_c__3F466844");

                    b.Navigation("CourseCategory");
                });

            modelBuilder.Entity("dbs2webapp.Models.Option", b =>
                {
                    b.HasOne("dbs2webapp.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__Option__Question__5812160E");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("dbs2webapp.Models.Test", b =>
                {
                    b.HasOne("dbs2webapp.Models.Chapter", "Chapter")
                        .WithMany("Tests")
                        .HasForeignKey("ChapterId")
                        .IsRequired()
                        .HasConstraintName("FK__Test__ChapterId__4BAC3F29");

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("dbs2webapp.Models.TestInstance", b =>
                {
                    b.HasOne("dbs2webapp.Models.Test", "Test")
                        .WithMany("TestInstances")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__Test_inst__TestI__4E88ABD4");

                    b.HasOne("dbs2webapp.Models.User", "User")
                        .WithMany("TestInstances")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Test_inst__UserI__4F7CD00D");

                    b.Navigation("Test");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dbs2webapp.Models.TestQuestion", b =>
                {
                    b.HasOne("dbs2webapp.Models.Question", "Question")
                        .WithMany("TestQuestions")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__Test_Ques__Quest__5441852A");

                    b.HasOne("dbs2webapp.Models.Test", "Test")
                        .WithMany("TestQuestions")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__Test_Ques__TestI__5535A963");

                    b.Navigation("Question");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("dbs2webapp.Models.User", b =>
                {
                    b.HasOne("dbs2webapp.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User__RoleId__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("dbs2webapp.Models.UserCourse", b =>
                {
                    b.HasOne("dbs2webapp.Models.Course", "Course")
                        .WithMany("UserCourses")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Cour__Cours__4316F928");

                    b.HasOne("dbs2webapp.Models.User", "User")
                        .WithMany("UserCourses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Cour__UserI__4222D4EF");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("dbs2webapp.Models.Assignment", b =>
                {
                    b.Navigation("AssignmentSubmissions");
                });

            modelBuilder.Entity("dbs2webapp.Models.Chapter", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("ChapterContents");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("dbs2webapp.Models.Course", b =>
                {
                    b.Navigation("Chapters");

                    b.Navigation("UserCourses");
                });

            modelBuilder.Entity("dbs2webapp.Models.CourseCategory", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("dbs2webapp.Models.Question", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("TestQuestions");
                });

            modelBuilder.Entity("dbs2webapp.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("dbs2webapp.Models.Test", b =>
                {
                    b.Navigation("TestInstances");

                    b.Navigation("TestQuestions");
                });

            modelBuilder.Entity("dbs2webapp.Models.User", b =>
                {
                    b.Navigation("AssignmentSubmissions");

                    b.Navigation("Assignments");

                    b.Navigation("TestInstances");

                    b.Navigation("UserCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
