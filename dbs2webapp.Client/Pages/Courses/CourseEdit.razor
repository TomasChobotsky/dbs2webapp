@page "/courses/edit/{Id:int}"
@attribute [Authorize(Roles = "Teacher,Admin")]

@using Microsoft.AspNetCore.Authorization
@using dbs2webapp.Application.DTOs
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Edit Course</h3>

@if (isLoading)
{
    <p>Loading course info...</p>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}
else
{
    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Course Name</label>
            <InputText @bind-Value="model.Name" class="form-control" />
        </div>

        <div class="mb-3">
            <label class="form-label">Description</label>
            <InputTextArea @bind-Value="model.Description" class="form-control" rows="4" />
        </div>

        <div class="d-flex justify-content-between">
            <button class="btn btn-secondary" @onclick="GoBack">Cancel</button>
            <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }

    private CourseDto model = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            model = await Http.GetFromJsonAsync<CourseDto>($"api/courses/{Id}")
                     ?? throw new Exception("Course not found.");
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load course: {ex.Message}";
        }
        isLoading = false;
    }

    private async Task HandleValidSubmit()
    {
        var response = await Http.PutAsJsonAsync($"api/courses/{Id}", model);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/teacher-panel");
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.Error.WriteLine($"Error updating course: {error}");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/teacher-panel");
    }
}
